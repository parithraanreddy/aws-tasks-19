AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Lambda function triggered by S3 bucket events

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-triggered-bucket

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyS3TriggeredFunction
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          def handler(event, context):
              print("New object created:", event)
              return {
                  'statusCode': 200,
                  'body': 'Function executed successfully!'
              }
      Runtime: python3.8
      Timeout: 10

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  S3BucketEvent:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "${MyS3Bucket.Arn}/*"

  MyS3BucketNotification:
    Type: AWS::S3::BucketNotification
    Properties:
      Bucket: !Ref MyS3Bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt MyLambdaFunction.Arn

Outputs:
  BucketName:
    Value: !Ref MyS3Bucket
    Description: The name of the S3 bucket
